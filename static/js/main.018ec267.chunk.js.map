{"version":3,"sources":["types/Page.ts","components/NavBar/NavBar.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Page","NavBar","className","role","to","home","isActive","cn","people","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","peopleFromServer","selectedPersonSlug","setSelectedPersonSlug","map","person","slug","sex","href","onClick","name","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeopleFromServer","errorOccured","setErrorOccured","isLoading","setIsLoading","isEmpty","setIsEmpty","useEffect","find","prsn","length","catch","finally","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.018ec267.chunk.js","sourcesContent":["export enum Page {\n  home = '/',\n  people = '/people',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Page } from '../../types/Page';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to={Page.home}\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            ))}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to={Page.people}\n          className={({ isActive }) => (\n            cn(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            ))}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  peopleFromServer: Person[],\n  selectedPersonSlug: string,\n  setSelectedPersonSlug: (slug: string) => void,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peopleFromServer,\n  selectedPersonSlug,\n  setSelectedPersonSlug,\n}) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n    {(peopleFromServer.map(person => (\n      <tbody key={person.slug}>\n        <tr\n          data-cy=\"person\"\n          className={cn(\n            { 'has-background-warning': selectedPersonSlug === person.slug },\n          )}\n        >\n          <td>\n            <a\n              className={cn(\n                { 'has-text-danger': person.sex === 'f' },\n              )}\n              href={`#/people/${person.slug}`}\n              onClick={() => setSelectedPersonSlug(person.slug)}\n            >\n              {person.name}\n            </a>\n          </td>\n\n          <td>{person.sex}</td>\n          <td>{person.born}</td>\n          <td>{person.died}</td>\n\n          <td>\n            <a\n              className={cn(\n                { 'has-text-danger': person.mother },\n                { 'has-text-black': !person.mother },\n              )}\n              href={`#/people/${person.mother?.slug}`}\n              onClick={() => setSelectedPersonSlug(person.mother?.slug || '')}\n            >\n              {person.motherName || '-'}\n            </a>\n          </td>\n\n          <td>\n            <a\n              className={cn(\n                { 'has-text-black': !person.father },\n              )}\n              href={`#/people/${person.father?.slug}`}\n              onClick={() => setSelectedPersonSlug(person.father?.slug || '')}\n            >\n              {person.fatherName || '-'}\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    )))}\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [errorOccured, setErrorOccured] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState('');\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        setPeopleFromServer(response.map(\n          person => {\n            const mother\n            = response.find(prsn => prsn.name === person.motherName);\n            const father\n            = response.find(prsn => prsn.name === person.fatherName);\n\n            return { ...person, mother, father };\n          },\n        ));\n        if (response.length < 1) {\n          setIsEmpty(true);\n          setPeopleFromServer(peopleFromServer);\n        }\n      })\n      .catch(() => {\n        setErrorOccured(true);\n        setIsEmpty(false);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorOccured && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!errorOccured && !isEmpty && (\n            <PeopleTable\n              peopleFromServer={peopleFromServer}\n              selectedPersonSlug={selectedPersonSlug}\n              setSelectedPersonSlug={setSelectedPersonSlug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { NavBar } from './components/NavBar/NavBar';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { Page } from './types/Page';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path={Page.home}\n            element={<h1 className=\"title\">Home page</h1>}\n          />\n          <Route\n            path={Page.people}\n            element={<h1 className=\"title\">People page</h1>}\n          />\n\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path={Page.people} element={<PeoplePage />}>\n            <Route index element={<PeoplePage />} />\n            <Route path=\":tabId\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}